{
  "model_id": "vgg",
  "user_id": "1",
  "optimizer": "rmsprop",
  "loss": "sparse_categorical_crossentropy",
  "metrics": "accuracy",
  "layers": [
    {
      "type": "Conv2D",
      "params": {
        "filters": 128,
        "kernel_size": [3, 3],
        "padding": "same",
        "activation": "elu"
      }
    },
    {
      "type": "Conv2D",
      "params": {
        "filters": 128,
        "kernel_size": [3, 3],
        "padding": "same",
        "activation": "elu"
      }
    },
    {
      "type": "MaxPool2D",
      "params": {
        "pool_size": [2, 2]
      }
    },
    {
      "type": "Conv2D",
      "params": {
        "filters": 256,
        "kernel_size": [3, 3],
        "padding": "same",
        "activation": "elu"
      }
    },
    {
      "type": "Conv2D",
      "params": {
        "filters": 256,
        "kernel_size": [3, 3],
        "padding": "same",
        "activation": "elu"
      }
    },
    {
      "type": "MaxPool2D",
      "params": {
        "pool_size": [2, 2]
      }
    },
    {
      "type": "Dropout",
      "params": {
        "rate": 0.25
      }
    },
    {
      "type": "Conv2D",
      "params": {
        "filters": 512,
        "kernel_size": [3, 3],
        "padding": "same",
        "activation": "elu"
      }
    },
    {
      "type": "Conv2D",
      "params": {
        "filters": 512,
        "kernel_size": [3, 3],
        "padding": "same",
        "activation": "elu"
      }
    },
    {
      "type": "MaxPool2D",
      "params": {
        "pool_size": [2, 2]
      }
    },
    {
      "type": "Dropout",
      "params": {
        "rate": 0.25
      }
    },
    {
      "type": "Flatten"
    },
    {
      "type": "Dense",
      "params": {
        "units": 1024,
        "activation": "elu"
      }
    },
    {
      "type": "Dropout",
      "params": {
        "rate": 0.5
      }
    },
    {
      "type": "Dense",
      "params": {
        "units": 100,
        "activation": "softmax"
      }
    }
  ],
  "input": {
    "type": "builtin_dataset",
    "dataset": "cifar100",
    "dimensions": [32, 32],
    "channels": 3
  },
  "output": {
    "type": "integer",
    "range": [0, 100]
  }
} 
